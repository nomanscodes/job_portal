/* eslint-disable react-hooks/exhaustive-deps */
import * as React from 'react';
import Head from 'next/head';
import Avatar from '@mui/material/Avatar';
import Button from '@mui/material/Button';
import CssBaseline from '@mui/material/CssBaseline';
import TextField from '@mui/material/TextField';
import FormControlLabel from '@mui/material/FormControlLabel';
import Checkbox from '@mui/material/Checkbox';
import Link from '@mui/material/Link';
import Paper from '@mui/material/Paper';
import Box from '@mui/material/Box';
import Grid from '@mui/material/Grid';
import { useState, useEffect } from 'react';
import LockOutlinedIcon from '@mui/icons-material/LockOutlined';
import Typography from '@mui/material/Typography';
import { toast, ToastContainer } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";
import { createTheme, ThemeProvider } from '@mui/material/styles';
import { parseCookies } from "nookies";
import cookie from "js-cookie";
import { useRouter } from 'next/router';
import MyStatefulEditor from '@/Component/TextEditor';
import { FormControl, InputLabel, MenuItem, Select } from '@mui/material';

const defaultTheme = createTheme();

export default function CreateJob() {
  const cookies = parseCookies();
  const userCookies = cookies?.access;

  const router = useRouter()

  const [loading, setLoding] = useState(false)

  const [post, setPost] = useState({
    title: "",
    company_name: "",
    overview: "",
    job_type: "",
    location: "",
    shift: ""
  });

  const updatePost = (e) => {
    setPost({ ...post, [e.target.name]: e.target.value });
  };

  const [responsibilities, setResponsibilities] = useState("");
  const [requirements, setRequirements] = useState("");

  const handleresponsibilities = (value) => {
    setResponsibilities(value)
  };
  const handlerequirements = (value) => {
    setRequirements(value)
  };

  const [test, setTest] = useState({
    responsibilities: [],
    requirements: [],
    title: [],
    company_name: [],
    overview: [],
    job_type: [],
    location: [],
    shift: []
  });

  const { title, company_name, overview, job_type, location, shift } = post

  useEffect(() => {
    setTest({ ...test, responsibilities, requirements, title, company_name, overview, job_type, location, shift });
  }, [responsibilities, requirements, post]);


  async function sendPost(test) {

    // console.log("test", test);
    var myHeaders = new Headers();
    myHeaders.append("Content-Type", "application/json");
    myHeaders.append("Authorization", `Bearer ${userCookies}`);

    var raw = JSON.stringify({
      "title": test.title,
      "company_name": test.company_name,
      "overview": test.overview,
      "responsibilities": test.responsibilities,
      "requirements": test.requirements,
      "job_type": test.job_type,
      "location": test.location,
      "shift": test.shift
    });

    var requestOptions = {
      method: "POST",
      headers: myHeaders,
      body: raw
    };

    const Job = await fetch(`https://nomanhasan.pythonanywhere.com/api/view/`, requestOptions);

    const result = await Job.json();

    console.log("result", result);

    if (result.errors) {
      toast.error(result.errors);
      setLoding(false);
    }

    toast.success(result.msg);
    setTimeout(() => {
      router.push("/");
    }, 1000);
    setLoding(false);
  }

  function SubmitHandler(e) {
    e.preventDefault();
    const { responsibilities, requirements, company_name, job_type, location, overview, shift, title } = test;

    setLoding(true);
    if (responsibilities == "" || requirements == "" || company_name == "" || job_type == "" || location == "" || overview == "" || shift == "" || title == "") {
      toast.error(`All field are required`);
    } else {
      sendPost(test)
    }
  }

  return (
    <>
      <Head>
        <title>Create Job</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <ThemeProvider theme={defaultTheme}>
        <ToastContainer />
        <Grid container component="main" sx={{ marginTop: 12, display: 'flex', alignItems: 'center', justifyContent: 'center', position: "absoulate" }}>
          <Grid
            sx={{
              display: 'flex',
              alignItems: 'center',
              justifyContent: 'center'

            }}
            item xs={12} sm={8} md={10} component={Paper} elevation={6} square>
            <Box
              sx={{
                my: 8,
                mx: 4,
                display: 'flex',
                flexDirection: 'column',
                alignItems: 'center',
              }}
            >

              <Typography component="h1" variant="h5">
                Create JOB
              </Typography>
              <Box component="form" noValidate sx={{ mt: 1 }}>

                <TextField
                  margin="normal"
                  required
                  fullWidth
                  id="title"
                  label="Job Title"
                  name="title"
                  autoComplete="title"
                  autoFocus
                  onChange={updatePost}
                />

                <TextField
                  margin="normal"
                  required
                  fullWidth
                  id="company_name"
                  label="Company Name"
                  name="company_name"
                  autoComplete="company_name"
                  autoFocus
                  onChange={updatePost}
                />
                <TextField
                  margin="normal"
                  required
                  fullWidth
                  id="overview"
                  label="Overview"
                  name="overview"
                  autoComplete="overview"
                  autoFocus
                  onChange={updatePost}

                />
                <Grid sx={{ marginTop: 1 }}>
                  <Typography sx={{ marginBottom: 1 }}>
                    Responsibilities
                  </Typography>
                  <MyStatefulEditor
                    name="responsibilities"
                    value
                    onChange={handleresponsibilities}
                  />
                </Grid>

                <Grid sx={{ marginTop: 2 }}>
                  <Typography sx={{ marginBottom: 1 }}>
                    Requirements
                  </Typography>
                  <MyStatefulEditor
                    name="requirements"
                    value
                    onChange={handlerequirements}
                  />
                </Grid>

                <FormControl fullWidth sx={{ mt: 2 }}>
                  <InputLabel id="demo-simple-select-label">Job Type</InputLabel>
                  <Select
                    labelId="demo-simple-select-label"
                    id="demo-simple-select"
                    name='job_type'
                    label="Job"
                    onChange={updatePost}
                  >
                    <MenuItem value="Full Time">Full Time</MenuItem>
                    <MenuItem value="Part Time">Part Time</MenuItem>
                  </Select>
                </FormControl>

                <TextField
                  sx={{ mt: 2 }}
                  margin="normal"
                  required
                  fullWidth
                  id="location"
                  label="Location"
                  name="location"
                  autoComplete="location"
                  autoFocus
                  onChange={updatePost}
                />
                <FormControl fullWidth sx={{ mt: 2 }}>
                  <InputLabel id="demo-simple-select-label">Shift</InputLabel>
                  <Select
                    labelId="demo-simple-select-label"
                    id="demo-simple-select"
                    name='shift'
                    label="Age"
                    onChange={updatePost}
                  >
                    <MenuItem value="Day Shift">Day Shift</MenuItem>
                    <MenuItem value="Night Shift">Night Shift</MenuItem>
                  </Select>
                </FormControl>
                <Button
                  type="submit"
                  onClick={SubmitHandler}
                  fullWidth
                  variant="contained"
                  sx={{ mt: 3, mb: 2 }}
                >
                  Create
                </Button>

              </Box>
            </Box>
          </Grid>
        </Grid>
      </ThemeProvider >
    </>
  );
}
